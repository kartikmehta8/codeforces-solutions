#include <bits/stdc++.h>
using namespace std;

#define FOR(X) for (int i = 0; i < X; i++)

int main() {
    
    #ifndef ONLINE_JUDGE
		freopen("input.txt", "r", stdin);
		freopen("output.txt", "w", stdout);
	#endif

	std::ios::sync_with_stdio(0);
	cin.tie(0);

	int N;
	cin >> N;
	int arr[N];
	for (int i = 0; i < N; i++) cin >> arr[i];

	int count=0, index=0;
	for (int i = 0; i < N; i++) {
		if (arr[i] < 0) {
			count += arr[i];
			index++;
		} else break;
	}

	int police=0;
	for (int i = index; i < N; i++) {
		if (arr[i] > 0) police += arr[i];
		else {
			if (police == 0) count += arr[i];
			else {
				if (police > arr[i]) police -= abs(arr[i]);
				else {
					count += abs(arr[i])-police;
					police=0;
				}
			}
		}
	}

	cout << abs(count) << "\n";

    return 0;

}

// The police department of your city has just started its journey. Initially,
// they donâ€™t have any manpower. So, they started hiring new recruits in
// groups.

// Meanwhile, crimes keeps occurring within the city. One member of the police
// force can investigate only one crime during his/her lifetime.

// If there is no police officer free (isn't busy with crime) during the
// occurrence of a crime, it will go untreated.

// Given the chronological order of crime occurrences and recruit hirings, find
// the number of crimes which will go untreated.