#include <bits/stdc++.h>
using namespace std;

#define FOR(X) for (int i = 0; i < X; i++)

void ROUND(int X, int count) {

	if (X==0) return;
	if (X%10!=0) {
		cout << (X%10)*pow(10, count) << " ";
	}
	count++;
	ROUND(X/10, count);
}

int NON_ZERO_COUNT(int X) {
	if (X==0) return 0;
	else if (X%10!=0) return 1+NON_ZERO_COUNT(X/10);
	else return 0+NON_ZERO_COUNT(X/10);

}

int main() {
    
    #ifndef ONLINE_JUDGE
		freopen("input.txt", "r", stdin);
		freopen("output.txt", "w", stdout);
	#endif

	std::ios::sync_with_stdio(0);
	cin.tie(0);

	int T, count=0;
	cin >> T;

	FOR(T) {
		int N, count=0;
		cin >> N;
		int non_count = NON_ZERO_COUNT(N);
		cout << non_count << "\n";
		ROUND(N, count);
		count=0;
		cout << "\n";
	}

    return 0;

}

// A positive (strictly greater than zero) integer is called round if it is of
// the form d00...0. In other words, a positive integer is round if all its
// digits except the leftmost (most significant) are equal to zero. In
// particular, all numbers from 1 to 9 (inclusive) are round.

// For example, the following numbers are round: 4000, 1, 9, 800, 90. The
// following numbers are not round: 110, 707, 222, 1001.

// You are given a positive integer n (1≤n≤104). Represent the number n as a sum
// of round numbers using the minimum number of summands (addends). In other
// words, you need to represent the given number n as a sum of the least number
// of terms, each of which is a round number.