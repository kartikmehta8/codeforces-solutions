#include <bits/stdc++.h>
using namespace std;

#define FOR(X) for (int i = 0; i < X; i++)

int main() {
    
    #ifndef ONLINE_JUDGE
		freopen("input.txt", "r", stdin);
		freopen("output.txt", "w", stdout);
	#endif

	std::ios::sync_with_stdio(0);
	cin.tie(0);

	long long N, two=0, three=0;
	cin >> N;

	if (N%2==0) two = N/2;
	else {
		two = N/2-1;
		three++;
	}

	cout << two+three << "\n";

	FOR(two) cout << 2 << " ";
	FOR(three) cout << 3 << " ";

    return 0;

}

// Bachgold problem is very easy to formulate. Given a positive integer n
// represent it as a sum of maximum possible number of prime numbers. One can
// prove that such representation exists for any integer greater than 1.

// Recall that integer k is called prime if it is greater than 1 and has exactly
// two positive integer divisors â€” 1 and k.