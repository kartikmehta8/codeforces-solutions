#include <bits/stdc++.h>
using namespace std;

int main() {

	#ifndef ONLINE_JUDGE
		freopen("input.txt", "r", stdin);
		freopen("output.txt", "w", stdout);
	#endif

	std::ios::sync_with_stdio(0);
	cin.tie(0);

	int N;
	cin >> N;
	int arr[N];
	for (int i = 0; i < N; i++) cin >> arr[i];
	int max = arr[0], min = arr[N-1], max_pos=0, min_pos=N-1;
	for (int i = 1; i < N; i++) {
		if (max < arr[i]) {
			max = arr[i];
			max_pos = i;
		}
	}

	int swaps=0;

	while (max_pos != 0) {
		swap(arr[max_pos-1], arr[max_pos]);
		swaps++;
		max_pos--;
	}

	for (int i = N-2; i > 0; i--) {
		if (min > arr[i]) {
			min = arr[i];
			min_pos = i;
		}
	}

	while (min_pos != N-1) {
		swap(arr[min_pos], arr[min_pos+1]);
		swaps++;
		min_pos++;
	}

	cout << swaps;

    return 0;
	
}

// A Ministry for Defense sent a general to inspect the Super Secret Military
// Squad under the command of the Colonel SuperDuper. Having learned the news,
// the colonel ordered to all n squad soldiers to line up on the parade ground.

// By the military charter the soldiers should stand in the order of
// non-increasing of their height. But as there's virtually no time to do that,
// the soldiers lined up in the arbitrary order. However, the general is rather
// short-sighted and he thinks that the soldiers lined up correctly if the first
// soldier in the line has the maximum height and the last soldier has the
// minimum height. Please note that the way other solders are positioned does
// not matter, including the case when there are several soldiers whose height
// is maximum or minimum. Only the heights of the first and the last soldier are
// important.

// For example, the general considers the sequence of heights (4, 3, 4, 2, 1, 1)
// correct and the sequence (4, 3, 1, 2, 2) wrong.

// Within one second the colonel can swap any two neighboring soldiers. Help him
// count the minimum time needed to form a line-up which the general will
// consider correct.